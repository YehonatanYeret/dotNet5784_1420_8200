<Window x:Class="PL.Task.TaskListWindow"
        
        xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
        xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
        xmlns:d="http://schemas.microsoft.com/expression/blend/2008"
        xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006"
        xmlns:local="clr-namespace:PL.Task"
        mc:Ignorable="d"
        Title="TaskListWindow" Height="640" Width="800"
        DataContext="{Binding RelativeSource={RelativeSource Mode=Self}}">
    <!-- External Grid -->
    <Grid Background="#FF9ABECA">
        <Grid.RowDefinitions>
            <!-- Row 0: Top part 1 for filter and selection -->
            <RowDefinition Height="40*"/>
            <!-- Row 1: Top part 2 for filter and selection -->
            <RowDefinition Height="40*"/>
            <!-- Row 2 Main content area for displaying tasks -->
            <RowDefinition Height="500*"/>
            <!-- Row 3: Button for adding new task -->
            <RowDefinition Height="Auto"/>
        </Grid.RowDefinitions>

        <!-- Internal, Upper Grid 1-->
        <Grid HorizontalAlignment="Stretch" Height="auto" Grid.Row="0" VerticalAlignment="Stretch" Width="auto">
            <Grid.ColumnDefinitions>
                <!-- Column 0: Label for displaying selected task status -->
                <ColumnDefinition Width="2*"/>
                <!-- Column 1: ComboBox for selecting task status -->
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <!-- Label for displaying selected task status -->
            <Label Grid.Column="0" Content="Selected status of tasks:" VerticalContentAlignment="Stretch" FontSize="24" FontFamily="MS UI Gothic" FontWeight="Bold" HorizontalContentAlignment="Center"/>

            <!-- ComboBox for selecting task status -->
            <ComboBox Grid.Column="1" VerticalAlignment="Stretch"
                      ItemsSource="{Binding Source={StaticResource TaskCollectionKey}}"
                      SelectedItem="{Binding status, Mode=TwoWay}" SelectionChanged="Filter_SelectionChanged"/>
        </Grid>

        <!-- Internal, Upper Grid 2-->
        <Grid HorizontalAlignment="Stretch" Height="auto" Grid.Row="1" VerticalAlignment="Stretch" Width="auto">
            <Grid.ColumnDefinitions>
                <!-- Column 0: Label for displaying selected task complexity -->
                <ColumnDefinition Width="2*"/>
                <!-- Column 1: ComboBox for selecting task complexity -->
                <ColumnDefinition Width="1*"/>
            </Grid.ColumnDefinitions>

            <!-- Label for displaying selected task complexity -->
            <Label Grid.Column="0" Content="Selected level of tasks:" VerticalContentAlignment="Stretch" FontSize="24" FontFamily="MS UI Gothic" FontWeight="Bold" HorizontalContentAlignment="Center"/>

            <!-- ComboBox for selecting task complexity -->
            <ComboBox Grid.Column="1" VerticalAlignment="Stretch"
               ItemsSource="{Binding Source={StaticResource EngineerCollectionKey}}"
               SelectedItem="{Binding complexity, Mode=TwoWay}" SelectionChanged="Filter_SelectionChanged"/>
        </Grid>

        <!-- ListView to display EngineerList -->
        <ListView Grid.Row="2" ItemsSource="{Binding TaskList}" 
                  MouseDoubleClick="UpdateListView_DoubleClick">
            <ListView.View>
                <GridView >
                    <!-- Column 0: Task ID -->
                    <GridViewColumn Header="Id" DisplayMemberBinding="{Binding Id}" >
                        <GridViewColumn.CellTemplate >
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Id}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Column 1: Task Alias -->
                    <GridViewColumn Header="Alias" DisplayMemberBinding="{Binding Alias}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Alias}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Column 2: Task Description -->
                    <GridViewColumn Header="Description" DisplayMemberBinding="{Binding Description}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Description}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>

                    <!-- Column 3: Task Status -->
                    <GridViewColumn Header="Status" DisplayMemberBinding="{Binding Status}">
                        <GridViewColumn.CellTemplate>
                            <DataTemplate>
                                <TextBlock TextWrapping="Wrap" Text="{Binding Status}"/>
                            </DataTemplate>
                        </GridViewColumn.CellTemplate>
                    </GridViewColumn>
                </GridView>
            </ListView.View>
        </ListView>


        <Grid Grid.Row="3" Height="50">
            
            <Grid.ColumnDefinitions>
                <ColumnDefinition Width="*"/>
                <ColumnDefinition Width="*"/>
            </Grid.ColumnDefinitions>

            <!-- Visibility of the buttons based on conditions using MultiBinding -->
            <Grid.Visibility>
                <MultiBinding Converter="{StaticResource ConvertEngineerAndStatusToVisibleKey}">
                    <Binding Path="EngineerID" />
                    <Binding Path="IsProjectStarted" />
                </MultiBinding>
            </Grid.Visibility>
            
            <!-- Button to add a new engineer -->
            <Button Grid.Column="0" Content="Add" HorizontalAlignment="Right" Width="100" Click="AddBtn_OnClick" Margin="5"/>

            <Button Grid.Column="1" Content="Recovery" HorizontalAlignment="Left" Width="100" Click="BtnRecovery_Click" Margin="5"/>

        </Grid>
    </Grid>
</Window>
